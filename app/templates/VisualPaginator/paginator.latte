{default $maxCountLinks = 10}
{default $successivePages = 3}
{var $transactionOnPage = 30}
{var $min = $paginator->getBase()}
{var $max = $paginator->getPageCount()}
{var $itemCount = $paginator->getItemCount()}
{var $currentPage = $paginator->getPage()}
{var $additionalPages = $maxCountLinks - 2 - ($successivePages*2) + 1}
{var $freePlaces = $maxCountLinks - $additionalPages}
{var $additionalStep = ceil(($max - $min) / $freePlaces)}

<nav aria-label="Page navigation example">
	<ul class="pagination">
		{if (($max-$min) <= $maxCountLinks)} {* Can links be render gradually? *}
			{for $p = $min; $p<=$max; $p++}
				<li n:class="pagination__item, ($currentPage === $p)? active">
					<a class="pagination__link" n:href="this, heihtStart => $p">{$p}</a>
				</li>
				<li class="pagination__item pagination__item--hidden"> | </li>
			{/for}
		{else}
			{for $p = $max; $p>=$min; $p--}
				{var $firstAndLast = ($p === $min || $p === $max)}
				{var $closestRange = ($p > ($currentPage - $successivePages) && $p < ($currentPage + $successivePages))}
				{var $addOn = (($p % $additionalStep) === 0)}
				{if $firstAndLast || $closestRange || $addOn}
					{var $item = min($p * $transactionOnPage, $itemCount)}
					<li n:class="pagination__item, ($heightStart === min($p * 30, $itemCount)) ? active">
						<a class="pagination__link" n:href="this, heightStart => $item" n:tag-if="$item !== $heightStart">{$item}</a>
					</li>
					<li class="pagination__item">|</li>
				{/if}
			{/for}
		{/if}
</nav>
